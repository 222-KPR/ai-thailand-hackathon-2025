# AI4Thai Tools - Dependency Management Only
# This file manages dependencies for configuration tools
# Not intended as an installable package

[project]
name = "ai4thai-tools"
version = "1.0.0"
description = "AI4Thai Configuration Generation Tools"
requires-python = ">=3.11"
dependencies = [
    "jinja2>=3.1.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.3.0",
]

[dependency-groups]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.24.0",
    "fastapi[all]>=0.100.0",
    "pillow>=9.0.0",
    "numpy>=1.24.0",
    "redis>=4.5.0",
    "celery>=5.3.0",
]

# Don't build as package - just manage dependencies
[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
py-modules = []

[tool.ruff]
target-version = "py311"
line-length = 88
extend-exclude = [
    ".git", ".venv", "__pycache__", "build", "dist",
    ".pytest_cache", ".ruff_cache",
]

[tool.ruff.lint]
select = [
    "E", "W",    # pycodestyle errors & warnings
    "F",         # Pyflakes
    "I",         # isort
    "B",         # flake8-bugbear
    "C4",        # flake8-comprehensions
    "UP",        # pyupgrade
    "SIM",       # flake8-simplify
    "T20",       # flake8-print
    "RUF",       # Ruff-specific rules
]

ignore = [
    "E501",   # Line too long (let ruff format handle it)
    "F401",   # Unused imports in test files
    "S101",   # Use of assert in tests
    "T201",   # print found (allow prints for tools)
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=vision-service",
    "--cov=queue-worker",
    "--cov=shared",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-fail-under=75",
    "--tb=short",
]
testpaths = [
    "vision-service",
    "queue-worker",
    "shared",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
    "api: API endpoint tests",
    "model: AI model tests",
]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = [
    "vision-service",
    "queue-worker",
    "shared",
]
omit = [
    "*/test_*.py",
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
